---
import Logo from "./Logo.astro";
---

<header
  id="landing-header"
  class="flex justify-between items-center fixed top-0 w-full py-3 z-40 text-white"
>
  <div class="flex items-center flex-grow basis-0">
    <Logo />
  </div>
  <nav class="">
    <ul
      class="flex text-sm [&>li>a]:text-current [&>li>a]:transition-colors [&>li>a]:duration-200 [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#">Model S</a></li>
      <li><a href="#">Model 3</a></li>
      <li><a href="#">Model X</a></li>
      <li><a href="#">Model Y</a></li>
      <li><a href="#">Solar Roof</a></li>
      <li><a href="#">Solar Panels</a></li>
      <li><a href="#">Powerwall</a></li>
    </ul>
  </nav>
  <nav class="flex flex-grow basis-0 justify-end">
    <ul
      class="flex text-sm [&>li>a]:text-current [&>li>a]:transition-colors [&>li>a]:duration-200 [&>li>a]:font-medium mr-8 [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#">Shop</a></li>
      <li><a href="#">Account</a></li>
      <li><a href="#">Menu</a></li>
    </ul>
  </nav>

  <div
    id="menu-backdrop"
    class="-z-10 absolute bg-black/5 rounded backdrop-blur-lg transition-all duration-500 ease-out top-0 left-0 translate-x-[var(--left)] translate-y-[var(--top)] w-[var(--width)] h-[var(--height)]"
  >
  </div>
</header>

<script>
  const listItem = document.querySelectorAll('#landing-header li')
  const menuBackdrop = document.querySelector('#menu-backdrop') as HTMLElement

  listItem.forEach((item) => {
    item.addEventListener('mouseenter', () => {
      const { left, top, width, height } = item.getBoundingClientRect()

      menuBackdrop.style.setProperty("--left", `${left}px`)
      menuBackdrop.style.setProperty("--top", `${top}px`)
      menuBackdrop.style.setProperty("--width", `${width}px`)
      menuBackdrop.style.setProperty("--height", `${height}px`)

      menuBackdrop.style.opacity = "1"
      menuBackdrop.style.visibility = "visible"
    })

    item.addEventListener('mouseleave', () => {
      menuBackdrop.style.opacity = "0"
      menuBackdrop.style.visibility = "hidden"
    })
  })
</script>

<script>
  const $header = document.querySelector("#landing-header") as HTMLElement;
  const observerOptions = {
    root: null, // Cuando entra al viewport, tambien sirve para elementos especificos
    rootMargin: "0px", // en cuanto se vea el elemento
    threshold: 0.9, // porcentaje de visibilidad para que se vea el elemento
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        $header.style.color = color;
      }
    });
  }, observerOptions);

  const $sections = document.querySelectorAll(".landing-section");
  $sections.forEach((section) => observer.observe(section));
</script>
